/* File: UpdateATask.css */

/* -------------------- Light (Default) Mode -------------------- */

/* Define CSS variables including sharp priority colors */
:root {
  --font-family: "Segoe UI", Tahoma, Geneva, Verdana, sans-serif;

  --color-light-bg: #ffffff;
  --color-light-text: #333333;
  --color-light-border: #e0e0e0;
  --color-light-secondary-bg: #fafafa;

  /* Updated sharp priority colors */
  --priority-high: #e74c3c; /* strong red */
  --priority-medium: #f1c40f; /* bold yellow */
  --priority-low: #2ecc71; /* vivid green */

  --transition-default: 0.3s;
}

/* Universal input/select styling for modal form */
#taskInput,
select[name="taskCategory"],
#taskPriorityDropdown,
input[name="dueDate"] {
  display: inline-block;
  margin: 8px 5px 8px 0;
  padding: 10px 12px;
  font-size: 15px;
  border: 1px solid #ccc;
  border-radius: 6px;
  background-color: #fff;
  color: #333;
  outline: none;
  transition: border 0.3s ease, box-shadow 0.3s ease;
}

#taskInput:focus,
select[name="taskCategory"]:focus,
#taskPriorityDropdown:focus,
input[name="dueDate"]:focus {
  border: 1px solid #3682ae;
  box-shadow: 0 0 0 3px rgba(54, 130, 174, 0.25);
}

/* "Save" button */
.saveButton {
  background: linear-gradient(135deg, #10b981, #0ea472);
  border: none;
  padding: 10px 18px;
  font-size: 16px;
  border-radius: 24px;
  color: #fff;
  margin-top: 5px;
  margin-left: 10px;
  cursor: pointer;
  transition: background 0.3s, transform 0.3s, box-shadow 0.3s;
  box-shadow: 0 4px 8px rgba(16, 185, 129, 0.3);
}

.saveButton:hover {
  transform: translateY(-1px) scale(1.02);
  box-shadow: 0 6px 12px rgba(16, 185, 129, 0.4);
}
.saveButton:active {
  transform: translateY(0) scale(0.98);
  box-shadow: 0 2px 6px rgba(16, 185, 129, 0.2);
}

/* "Cancel" button */
.cancelButton {
  background: linear-gradient(135deg, #ef4444, #dc2626);
  border: none;
  padding: 10px 18px;
  font-size: 16px;
  border-radius: 24px;
  color: #fff;
  margin-left: 10px;
  cursor: pointer;
  transition: background 0.3s, transform 0.3s, box-shadow 0.3s;
  box-shadow: 0 4px 8px rgba(239, 68, 68, 0.3);
}

.cancelButton:hover {
  transform: translateY(-1px) scale(1.02);
  box-shadow: 0 6px 12px rgba(239, 68, 68, 0.4);
}
.cancelButton:active {
  transform: translateY(0) scale(0.98);
  box-shadow: 0 2px 6px rgba(239, 68, 68, 0.2);
}

/* Container styling */
.taskListContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  margin: 40px auto;
  padding: 20px;
  max-width: 600px;
  border-radius: 10px;
  background: #ffffff;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
}
.taskListContainer h2 {
  font-size: 28px;
  margin-bottom: 20px;
  text-align: center;
  color: #333;
}

/* For the .taskList and .taskItem */
.taskList {
  list-style: none;
  padding: 0;
  margin: 0;
  width: 100%;
}
.taskItem {
  padding: 12px 14px;
  margin: 10px 0;
  border: 1px solid #ccc;
  border-left-width: 5px; /* Priority color indicator */
  border-radius: 6px;
  background-color: #fafafa;
  transition: background-color 0.3s ease, transform 0.3s;
}
.taskItem:hover {
  cursor: pointer;
  transform: translateY(-1px);
  color: #00000086;
  background: linear-gradient(135deg, #ffffff49, #a4a4a45f);
  box-shadow: 0 4px 8px rgba(239, 68, 68, 0.3);
  transition: transform 0.3s, box-shadow 0.3s;
}

/* Priority-based color indicators (light mode) */
.high {
  border-left-color: var(--priority-high);
}
.medium {
  border-left-color: var(--priority-medium);
}
.low {
  border-left-color: var(--priority-low);
}

/* Wrap priority text in a span for coloring */
.priority-label {
  color: inherit;
  font-weight: bold;
}

/* -------------------- Modal Styles -------------------- */

/* Modal overlay */
.modalOverlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.7);
  backdrop-filter: blur(4px);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 999;
  opacity: 0;
  animation: fadeIn 0.3s forwards;
}

@keyframes fadeIn {
  to {
    opacity: 1;
  }
}

/* Modal content container */
/* Add the priority class (high, medium, or low) dynamically */
.modalContent {
  position: relative;
  width: 90%;
  max-width: 550px;
  background-color: #fff;
  padding: 25px 30px;
  border-radius: 12px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
  transform: scale(0.9);
  animation: scaleIn 0.3s forwards;
}

@keyframes scaleIn {
  to {
    transform: scale(1);
  }
}

/* Add left border to modalContent based on priority in light mode */
.modalContent.high {
  border-left: 6px solid var(--priority-high);
}
.modalContent.medium {
  border-left: 6px solid var(--priority-medium);
}
.modalContent.low {
  border-left: 6px solid var(--priority-low);
}

/* Style the priority label within the modal in light mode */
.modalContent.high .priority-label {
  color: var(--priority-high);
}
.modalContent.medium .priority-label {
  color: var(--priority-medium);
}
.modalContent.low .priority-label {
  color: var(--priority-low);
}

/* Close button styles */
.closeButton {
  position: absolute;
  top: 18px;
  right: 18px;
  background: none;
  border: none;
  font-size: 1.3rem;
  cursor: pointer;
  color: #333;
  transition: color 0.3s;
}
.closeButton:hover {
  color: #e63946;
}

.modalContent h3 {
  margin-top: 0;
  font-size: 1.3rem;
  color: #333;
}
.modalContent label {
  font-weight: 500;
  color: #333;
}
.modalContent .formGroup {
  margin-bottom: 15px;
}
.modalContent .buttonsRow {
  display: flex;
  justify-content: flex-end;
  margin-top: 15px;
}

/* -------------------- Dark Mode Overrides -------------------- */
.dark-mode #taskInput,
.dark-mode select[name="taskCategory"],
.dark-mode #taskPriorityDropdown,
.dark-mode input[name="dueDate"] {
  background-color: #2c2c2c;
  border: 1px solid #555;
  color: #fff;
}

.dark-mode #taskInput:focus,
.dark-mode select[name="taskCategory"]:focus,
.dark-mode #taskPriorityDropdown:focus,
.dark-mode input[name="dueDate"]:focus {
  border: 1px solid #10b981;
  box-shadow: 0 0 0 3px rgba(16, 185, 129, 0.25);
}

/* Save Button in dark mode */
.dark-mode .saveButton {
  background: linear-gradient(135deg, #10b981, #0ea472);
  box-shadow: 0 4px 8px rgba(16, 185, 129, 0.3);
}
.dark-mode .saveButton:hover {
  transform: translateY(-1px) scale(1.02);
  box-shadow: 0 6px 12px rgba(16, 185, 129, 0.4);
}
.dark-mode .saveButton:active {
  transform: translateY(0) scale(0.98);
  box-shadow: 0 2px 6px rgba(16, 185, 129, 0.2);
}

/* Cancel Button in dark mode */
.dark-mode .cancelButton {
  background: linear-gradient(135deg, #ef4444, #dc2626);
  box-shadow: 0 4px 8px rgba(239, 68, 68, 0.3);
}
.dark-mode .cancelButton:hover {
  transform: translateY(-1px) scale(1.02);
  box-shadow: 0 6px 12px rgba(239, 68, 68, 0.4);
}
.dark-mode .cancelButton:active {
  transform: translateY(0) scale(0.98);
  box-shadow: 0 2px 6px rgba(239, 68, 68, 0.2);
}

/* Dark mode container */
.dark-mode .taskListContainer {
  background: #1f1f1f;
  box-shadow: 0 4px 10px rgba(255, 255, 255, 0.07);
}
.dark-mode .taskListContainer h2 {
  color: #f0f0f0;
}
.dark-mode .taskItem {
  background-color: #2a2a2a;
  border: 1px solid #555;
  border-left-width: 5px; /* Ensure priority indicator width is maintained */
  color: #ddd;
}

.dark-mode .taskItem h3 {
  color: #fff;
}
.dark-mode .taskItem p {
  color: #ccc;
}

/* Dark mode Priority Colors â€“ more specific selectors with !important */
.dark-mode .taskItem.high {
  border-left: 5px solid var(--priority-high) !important;
}
.dark-mode .taskItem.medium {
  border-left: 5px solid var(--priority-medium) !important;
}
.dark-mode .taskItem.low {
  border-left: 5px solid var(--priority-low) !important;
}

/* Also, style priority labels in dark mode within list items */
.dark-mode .taskItem.high .priority-label {
  color: var(--priority-high);
}
.dark-mode .taskItem.medium .priority-label {
  color: var(--priority-medium);
}
.dark-mode .taskItem.low .priority-label {
  color: var(--priority-low);
}

/* Modal in dark mode */
.dark-mode .modalContent {
  background-color: var(--color-dark-secondary-bg);
  box-shadow: 0 4px 10px rgba(255, 255, 255, 0.08);
  color: #eee;
}

/* If the modalContent has a priority class in dark mode, apply left border */
.dark-mode .modalContent.high {
  border-left: 6px solid var(--priority-high);
}
.dark-mode .modalContent.medium {
  border-left: 6px solid var(--priority-medium);
}
.dark-mode .modalContent.low {
  border-left: 6px solid var(--priority-low);
}

/* Style the priority label within the modal in dark mode */
.dark-mode .modalContent.high .priority-label {
  color: var(--priority-high);
}
.dark-mode .modalContent.medium .priority-label {
  color: var(--priority-medium);
}
.dark-mode .modalContent.low .priority-label {
  color: var(--priority-low);
}

.dark-mode .closeButton {
  color: var(--color-dark-text);
}

.dark-mode .closeButton:hover {
  color: #ff9b9b;
}

.dark-mode .modalContent h3 {
  color: #ccc;
}

.dark-mode .modalContent p {
  color: #ccc;
}
